{"ast":null,"code":"import _slicedToArray from \"/Users/websites/Downloads/uMovieParent/uMovie/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/websites/Downloads/uMovieParent/uMovie/src/components/Home.js\";\nimport React, { useState } from 'react';\nimport { POPULAR_BASE_URL, SEARCH_BASE_URL, API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from '../config'; // import Components\n\nimport HeroImage from './elements/HeroImage';\nimport SearchBar from './elements/SearchBar';\nimport Grid from './elements/Grid';\nimport MovieThumb from './elements/MovieThumb';\nimport LoadMoreBtn from './elements/LoadMoreBtn';\nimport Spinner from './elements/Spinner'; // custom hook\n\nimport { useHomeFetch } from './hooks/useHomeFetch';\nimport NoImage from './images/no_image.jpg';\n\nconst Home = () => {\n  const _useHomeFetch = useHomeFetch(),\n        _useHomeFetch2 = _slicedToArray(_useHomeFetch, 2),\n        _useHomeFetch2$ = _useHomeFetch2[0],\n        _useHomeFetch2$$state = _useHomeFetch2$.state,\n        movies = _useHomeFetch2$$state.movies,\n        currentPage = _useHomeFetch2$$state.currentPage,\n        totalPages = _useHomeFetch2$$state.totalPages,\n        heroImage = _useHomeFetch2$$state.heroImage,\n        loading = _useHomeFetch2$.loading,\n        error = _useHomeFetch2$.error,\n        fetchMovies = _useHomeFetch2[1];\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchTerm = _useState2[0],\n        setSearchTerm = _useState2[1];\n\n  const loadMoreMovies = () => {\n    const searchEndpoint = \"\".concat(SEARCH_BASE_URL).concat(searchTerm, \"&page=\").concat(currentPage + 1);\n    const popularEndpoint = \"\".concat(POPULAR_BASE_URL, \"&page=\").concat(currentPage + 1);\n    const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\n    fetchMovies(endpoint);\n  };\n\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Something went wrong ...\");\n  if (!movies[0]) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  });\n  return React.createElement(React.Fragment, null, React.createElement(HeroImage, {\n    image: \"\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(heroImage.backdrop_path),\n    title: heroImage.original_title,\n    text: heroImage.overview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(SearchBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    header: searchTerm ? 'Search Result' : 'Popular Movies',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, movies.map(movie => React.createElement(MovieThumb, {\n    key: movie.id,\n    clickable: true,\n    image: movie.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(movie.poster_path) : NoImage,\n    movieId: movie.id,\n    movieName: movie.original_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))), loading && React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), currentPage < totalPages && !loading && React.createElement(LoadMoreBtn, {\n    text: \"Load More\",\n    callback: loadMoreMovies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/websites/Downloads/uMovieParent/uMovie/src/components/Home.js"],"names":["React","useState","POPULAR_BASE_URL","SEARCH_BASE_URL","API_URL","API_KEY","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","HeroImage","SearchBar","Grid","MovieThumb","LoadMoreBtn","Spinner","useHomeFetch","NoImage","Home","state","movies","currentPage","totalPages","heroImage","loading","error","fetchMovies","searchTerm","setSearchTerm","loadMoreMovies","searchEndpoint","popularEndpoint","endpoint","backdrop_path","original_title","overview","map","movie","id","poster_path"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n    POPULAR_BASE_URL,\n    SEARCH_BASE_URL,\n    API_URL, \n    API_KEY,\n    IMAGE_BASE_URL, \n    BACKDROP_SIZE, \n    POSTER_SIZE \n  } from '../config';\n  \n// import Components\nimport HeroImage from './elements/HeroImage';\nimport SearchBar from './elements/SearchBar';\nimport Grid from './elements/Grid';\nimport MovieThumb from './elements/MovieThumb';\nimport LoadMoreBtn from './elements/LoadMoreBtn';\nimport Spinner from './elements/Spinner';\n\n// custom hook\nimport { useHomeFetch } from './hooks/useHomeFetch';\n\nimport NoImage from './images/no_image.jpg';\n\nconst Home = () => {\n  const [{ \n    state: {movies, currentPage, totalPages, heroImage}, \n    loading, \n    error,\n   }, fetchMovies] = useHomeFetch();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const loadMoreMovies = () => {\n    const searchEndpoint = `${SEARCH_BASE_URL}${searchTerm}&page=${currentPage + 1}`;\n    const popularEndpoint = `${POPULAR_BASE_URL}&page=${currentPage + 1}`;\n\n    const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\n\n    fetchMovies(endpoint);\n\n  }\n  \n  if (error) return <div>Something went wrong ...</div>;\n  if (!movies[0]) return <Spinner />\n  \n    return (\n        <>\n        <HeroImage \n            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}    \n            title={heroImage.original_title}\n            text={heroImage.overview}\n            />\n        <SearchBar />\n        <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\n          {movies.map(movie =>(\n            <MovieThumb\n              key={movie.id}\n              clickable\n              image={\n                movie.poster_path \n                  ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                  : NoImage\n              }\n              movieId={movie.id}\n              movieName={movie.original_title}\n              />\n              ))}\n\n        </Grid> \n        {loading && <Spinner />}\n        {currentPage < totalPages && !loading && (\n          <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} />\n        )}\n    </>\n    )\n}\n\n\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}